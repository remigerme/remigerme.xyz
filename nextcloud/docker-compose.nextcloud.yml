version: "3.7"

networks:
  web:
    external: true

volumes:
  mariadb-data-nextcloud:
  redis-data-nextcloud:
  nextcloud:

services:
  mariadb:
    image: mariadb:10.6
    container_name: nextcloud-mariadb
    restart: unless-stopped
    volumes:
      - mariadb-data-nextcloud:/var/lib/mysql
      - /mnt/backup/mysql:/backup
    networks:
      - web
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "MYSQL_DATABASE=${MYSQL_DB}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"

  redis:
    image: redis:7.2
    container_name: nextcloud-redis
    restart: unless-stopped
    volumes:
      - redis-data-nextcloud:/data
    networks:
      - web
    command: redis-server --requirepass ${REDIS_PASSWORD}

  nextcloud:
    image: nextcloud:26
    container_name: nextcloud
    restart: unless-stopped
    depends_on:
      - mariadb
      - redis
    links:
      - mariadb
      - redis
    volumes:
      - nextcloud:/var/www/html
      - /mnt/prod/data:/data
      - /mnt/backup/data:/backup
      - ./apache2.conf:/etc/apache2/apache2.conf # just to specify servername
    networks:
      - web
    environment:
      - "NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.remigerme.xyz"
      - "NEXTCLOUD_DATA_DIR=/data"
      - "MYSQL_DATABASE=${MYSQL_DB}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
      - "MYSQL_HOST=mariadb"
      - "NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}"
      - "NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}"
      - "REDIS_HOST=redis"
      - "REDIS_HOST_PASSWORD=${REDIS_PASSWORD}"
    labels:
      - traefik.enable=true
      # https configuration
      - traefik.http.routers.entrypoints=https
      - traefik.http.routers.nextcloud.rule=Host(`nextcloud.remigerme.xyz`)
      # Connect the reverse proxy to the container port 80
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
      - traefik.docker.network=web
      - traefik.http.routers.nextcloud.tls=true
      - traefik.http.routers.nextcloud.tls.certresolver=myresolver
